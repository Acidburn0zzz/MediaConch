Name,CCID,Version,Authority,Target Format,Target Format Version,Target Format Part,Citation,,Rule Clarity?,Test Type,,Threshold,Definition
Extension Test,,,,Matroska,all,,http://www.matroska.org/node/2/revisions/153/view,,Inferred,,,,"The file extension SHOULD be one of the following (MKV, MKA, MKS, MK3D, WEBM)"
Extension Test MKV,,,,Matroska,all,,http://www.matroska.org/node/2/revisions/153/view,,Inferred,,,,"If the file extension is MKV, the file SHOULD contain at least one video track."
Extension Test MKA,,,,Matroska,all,,http://www.matroska.org/node/7/revisions/214/view,,Inferred,,,,"If the file extension is MKV, the file SHOULD contain at least one audio track and no other type of track, i.e. ""audio-only""."
Extension Test MKS,,,,Matroska,all,,http://www.matroska.org/node/2/revisions/153/view,,Inferred,,,,"If the file extension is MKV, the file SHOULD contain at least one subtitle track."
Extension Test MK3D,,,,Matroska,?,StereoMode element,http://www.matroska.org/node/2/revisions/153/view,,Inferred,,,,"If the file extension is MKV, the file SHOULD contain at least one video track AND SHOULD contain at least one StereoMode element."
EBML Element Start,,,,Matroska,all,EBML Header,specdata.xml,"""Set the EBML characteristics of the data to follow. Each EBML document has to start with this.""",,,,,"An Matroska file MUST start with an EBML element id, ie. 0x1A45DFA3."
EBML vint efficiency,,,,EBML,all,,http://matroska.org/technical/specs/rfc/index.html,"Section 2.2 ""IDs are always encoded in their shortest form, e.g. 1 is always encoded as 0x81 and never as 0x4001.""",,,,,"The bits following the Element ID's Length Descriptor are not more than (8 - ${bit-length-of-length-descriptor}) successive 0 bits,  i.e. vint is expressed as efficiently as feasible."
Element ID Byte Length Limit,,,,EBML,all,,http://matroska.org/technical/specs/rfc/index.html,"""The EBML element ID is encoded as a variable size integer with, by default, widths up to 4.""",,,,,The first four bits of any Element ID may not start with 0b0000.
Element ID Registered,,,,EBML,all,,,,Inferred,,,,"Ensure MKV Element ID is registered in specdata.xml (as of Dec. 13, 2014 this is 224 registered Element IDs)"
Element Size 0x7F Reservation,,,,EBML,all,,http://matroska.org/technical/specs/rfc/index.html,"""Note that the shortest encoding form for 127 is 0x407f since 0x7f is reserved.""","Warning, since it is possible (though unlikely) element size is unknown but then happens to be 127 bytes.",,,,If Element Size is set to 0x11111111 but element size is actually 127 bytes provide a warning.
Element Size Byte Length Limit,,,,EBML,all,,http://matroska.org/technical/specs/rfc/index.html,"Section 2.3: ""The EBML element data size is encoded as a variable size integer with, by default, widths up to 8.""",,,,,The first eight bits of any Element Size may not start with 0b00000000.
Element Size Unknown,,,,EBML,all,,,"""Values with all data bits set to 1 means size unknown, which allows
   for dynamically generated EBML streams where the final size isn't
   known beforehand.""",Warning,,,,"Warning on unknown element sizes, unoptimized MKV."
Level 0 Segment,,,,MKV,,EBML Header,specdata.xml,"Inferred: EBML and Segment are the only level 0 elements, both are allowed to occur multiple times.",,,,,"The EBML Header MSUT be immediately followed by another EBML Header Element, 0x1A45DFA3, or a Segment Element, 0x18538067. {{Can global Elements exist at level 0?!}}"
Only One EBML Header recommended,,,,,,,,Assumed: Two EBML Headers in one MKV file seems contradictory.,Warning,,,,There SHOULD only occur one EBML level 0 element within an MKV file. (EBML Headers could recur if an MKV file is an attachment of an MKV file).
File Size Consistency,,,,,,,http://www.matroska.org/technical/specs/index.html#block_structure,Inferred,,,,,The actual file size should be the sum of all level 0 Element Size declarations plus the sum of the byte sizes of level 0 Element IDs and Element Sizes.
EBMLVersion Presence,,,,,,EBML Header,,,,,,,Within any EBML Header exactly one EMBL Version element must be present.
""""" repeat for EBMLReadVersion, EBMLMaxIDLength, EBMLMaxSizeLength, DocType, DocTypeVersion, DocTypeReadVersion, ",,,,,,,,,,,,,
EBML Version Coherency,,,,,,,http://www.matroska.org/technical/specs/index.html#block_structure,,Inferred,,,,The value of EBMLVersion MUST be greater than or equal to the vale of EBMLReadVersion.
EBMLMaxIDLength Limits,,,,,,,specdata.xml,,"Spec says ""4 or less"", but since the EBML ID length itself is 4, the EBMLMaxIDLength has not other valid value.",,,,MUST equal 4
EBMLMaxSizeLength Limit,,,,,,,specdata.xml,,"""The maximum length of the sizes you'll find in this file (8 or less in Matroska).""",,,,Must be less than or equal to 8 and greater than or equal to 1.
EBMLMaxSizeLength Matches,,,,,,,specdata.xml,,,,,,No Element Size Length exceeds the length noted in EBMLMaxSizeLength
DocType,,,,,,,,,,,,,"MUST equal either ""matroska"" or ""webm"""
DocTypeVersion Coherency,,,,,,,,,,,,,The value of DocTypeVersion MUST be greater than or equal to the vale of DocTypeReadVersion.
DocTypeVersion Limits,,,,,,,,,,,,,"Values for DocTypeVersion and DocTypeReadVersion must be either 1, 2, 3, or 4."
Top Elements Coded on 4 Octets,,,,,,,http://www.matroska.org/technical/specs/index.html#block_structure,,"""All top-levels elements (Segment and direct sub-elements) are coded on 4 octets, i.e. class D elements.""",,,,"Note: this seems to contradict EBML rule to use most efficient element size, but perhaps this is an intention deviation of MKV to achieve top elements starting on mutiples of 4 octets. ?"
CRC Order,,,,,,,http://www.matroska.org/technical/specs/index.html#block_structure,,"""The CRC element should be the first in it's parent master for easier reading.""",,,,CRC Elements SHOULD be the first sub-Element of its parent Element.
CRC-32 Size Coherency,,,,,,,http://www.matroska.org/technical/specs/index.html#block_structure,,"Inferred: ""The CRC in use is the IEEE CRC32 Little Endian""",,,,The Element Size of the CRC-32 Element MUST be 4 bytes (aka 32 bit).
CRC Validation,,,,,,,,,,,,,"The crc hash of the CRC-32 element MUST validate the subsequent data of the parent Element, from the Element that follows the CRC-32 element to the end of the parent Element."
CRC Not Pointlessly Used,,,,,,,author,,Recommended,,, ,A CRC-32 element should not be the only child Element of its parent Element (ie hashing no data).
CRC-Presence,,,,,,,,,"""All level 1 elements should include a CRC-32."" but CRC-32 Element is NOT Mandatory.  ?",,,,Warning when Level 1 elements have no CRC-32. Very common.