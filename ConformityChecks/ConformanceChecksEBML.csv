<<<<<<< HEAD
Name,CCID,Version,Authority,Target Format,Target Format Version,Target Format Part,Citation,Quote,Rule Clarity?,Definition,Regex Parameters,Regular Expression,Done through MediaTrace?EBML vint efficiency,EBML-VINT-EFF,0,EBML Specification,EBML,all,EBML Structure,http://matroska.org/technical/specs/rfc/index.html,"Section 2.2 ""IDs are always encoded in their shortest form, e.g. 1 is always encoded as 0x81 and never as 0x4001.""",,"The bits following the Element ID's Length Descriptor are not more than (8 - ${bit-length-of-length-descriptor}) successive 0 bits,  i.e. vint is expressed as efficiently as feasible.",,,UnsureElement ID Registered,MKV-KNOWN-ELEM,0,,EBML,all,,,,Inferred,"Ensure MKV Element ID is registered in specdata.xml (as of Dec. 13, 2014 this is 224 registered Element IDs)",,,UnsureElement Size 0x7F Reservation,EBML-ELEM-SIZE-7F,0,EBML Specification,EBML,all,EBML Element Size,http://matroska.org/technical/specs/rfc/index.html,"""Note that the shortest encoding form for 127 is 0x407f since 0x7f is reserved.""","Warning, since it is possible (though unlikely) element size is unknown but then happens to be 127 bytes.",If Element Size is set to 0x11111111 but element size is actually 127 bytes provide a warning.,,,UnsureElement Size Byte Length Limit,EBML-ELEM-SIZE-CAP,0,EBML Specification,EBML,all,EBML Element Size,http://matroska.org/technical/specs/rfc/index.html,"Section 2.3: ""The EBML element data size is encoded as a variable size integer with, by default, widths up to 8.""",,The first eight bits of any Element Size may not start with 0b00000000.,,,UnsureElement Size Unknown,EBML-ELEM-SIZE-UNK,0,EBML Specification,EBML,all,EBML Element Size,Dave,"""Values with all data bits set to 1 means size unknown, which allows for dynamically generated EBML streams where the final size isn't known beforehand.""",Warning,"Warning on unknown element sizes, unoptimized MKV.",,,Unsure
=======
Name,CCID,Version,Authority,Target Format,Target Format Version,Target Format Part,Citation,Quote,Rule Clarity?,Definition,Regex Parameters,Regular Expression
EBML vint efficiency,EBML-VINT-EFF,0,EBML Specification,EBML,all,EBML Structure,http://matroska.org/technical/specs/rfc/index.html,"Section 2.2 ""IDs are always encoded in their shortest form, e.g. 1 is always encoded as 0x81 and never as 0x4001.""",,"The bits following the Element ID's Length Descriptor are not more than (8 - ${bit-length-of-length-descriptor}) successive 0 bits,  i.e. vint is expressed as efficiently as feasible.",,
Element ID Registered,MKV-KNOWN-ELEM,0,,EBML,all,,,,Inferred,"Ensure MKV Element ID is registered in specdata.xml (as of Dec. 13, 2014 this is 224 registered Element IDs)",,
Element Size 0x7F Reservation,EBML-ELEM-SIZE-7F,0,EBML Specification,EBML,all,EBML Element Size,http://matroska.org/technical/specs/rfc/index.html,"""Note that the shortest encoding form for 127 is 0x407f since 0x7f is reserved.""","Warning, since it is possible (though unlikely) element size is unknown but then happens to be 127 bytes.",If Element Size is set to 0x11111111 but element size is actually 127 bytes provide a warning.,,
Element Size Byte Length Limit,EBML-ELEM-SIZE-CAP,0,EBML Specification,EBML,all,EBML Element Size,http://matroska.org/technical/specs/rfc/index.html,"Section 2.3: ""The EBML element data size is encoded as a variable size integer with, by default, widths up to 8.""",,The first eight bits of any Element Size may not start with 0b00000000.,,
Element Size Unknown,EBML-ELEM-SIZE-UNK,0,EBML Specification,EBML,all,EBML Element Size,Dave,"""Values with all data bits set to 1 means size unknown, which allows for dynamically generated EBML streams where the final size isn't known beforehand.""",Warning,"Warning on unknown element sizes, unoptimized MKV.",,
EBML Element Start,MKV-EBML-ELEM-START,0,Matroska Specification,Matroska,all,EBML Header,specdata.xml,"""Set the EBML characteristics of the data to follow. Each EBML document has to start with this.""",,"An Matroska file MUST start with an EBML element id, ie. 0x1A45DFA3.",,
Only One EBML Header recommended,MKV-1-EBML,0,Matroska Specification,Matroska,all,Matroska structure,is there a rule to prevent this?,Assumed: Two EBML Headers in one MKV file seems contradictory.,Warning,There SHOULD only occur one EBML level 0 element within an MKV file. (EBML Headers could recur if an MKV file is an attachment of an MKV file).,,
File Size Consistency,MKV-FILESIZE-MATCH,0,Matroska Specification,Matroska,all,Matroska structure,http://www.matroska.org/technical/specs/index.html#block_structure,Inferred,,The actual file size should be the sum of all level 0 Element Size declarations plus the sum of the byte sizes of level 0 Element IDs and Element Sizes.,,
EBMLVersion Presence,MKV-EBML-VER,0,Matroska Specification,Matroska,all,EBML Header,,,,Within any EBML Header exactly one EMBL Version element must be present.,,
EBMLReadVersion Presence,MKV-EBML-RV,0,Matroska Specification,Matroska,all,EBML Header,,,,,,
EBMLMaxIDLength Presence,MKV-EBML-MAXIDL,0,Matroska Specification,Matroska,all,EBML Header,,,,,,
EBMLMaxSizeLength Presence,MKV-EBML-MAXSL,0,Matroska Specification,Matroska,all,EBML Header,,,,,,
DocType Presence,MKV-EBML-DOCT,0,Matroska Specification,Matroska,all,EBML Header,,,,,,
DocTypeVersion Presence,MKV-EBML-DOCTV,0,Matroska Specification,Matroska,all,EBML Header,,,,,,
DocTypeReadVersion Presence,MKV-EBML-DOCTRV,0,Matroska Specification,Matroska,all,EBML Header,,,,,,
EBML Version Coherency,MKV-VER-COH,0,Matroska Specification,Matroska,all,EBML Header,http://www.matroska.org/technical/specs/index.html#block_structure,,Inferred,The value of EBMLVersion MUST be greater than or equal to the vale of EBMLReadVersion.,,
EBMLMaxIDLength Limits,MKV-MAXID-LIMIT,0,Matroska Specification,Matroska,all,EBML Header,specdata.xml,,"Spec says ""4 or less"", but since the EBML ID length itself is 4, the EBMLMaxIDLength has not other valid value.",MUST equal 4,,
EBMLMaxSizeLength Limit,MKV-MAXSL-LIMIT,0,Matroska Specification,Matroska,all,EBML Header,specdata.xml,,"""The maximum length of the sizes you'll find in this file (8 or less in Matroska).""",Must be less than or equal to 8 and greater than or equal to 1.,,
EBMLMaxSizeLength Matches,MKV-MAXSL-MATCH,0,Matroska Specification,Matroska,all,EBML Header,specdata.xml,,,No Element Size Length exceeds the length noted in EBMLMaxSizeLength,,
DocTypeVersion Coherency,MKV-DOCTV-COH,0,Matroska Specification,Matroska,all,EBML Header,,,,The value of DocTypeVersion MUST be greater than or equal to the vale of DocTypeReadVersion.,,
CRC Order,MKV-CRC-ORDER,0,Matroska Specification,Matroska,all,CRC Element,http://www.matroska.org/technical/specs/index.html#block_structure,,"""The CRC element should be the first in it's parent master for easier reading.""",CRC Elements SHOULD be the first sub-Element of its parent Element.,,
CRC-32 Size Coherency,MKV-CRC-COH,0,Matroska Specification,Matroska,all,CRC Element,http://www.matroska.org/technical/specs/index.html#block_structure,,"Inferred: ""The CRC in use is the IEEE CRC32 Little Endian""",The Element Size of the CRC-32 Element MUST be 4 bytes (aka 32 bit).,,
CRC Validation,MKV-CRC-VAL,0,Matroska Specification,Matroska,all,CRC Element,,,,"The crc hash of the CRC-32 element MUST validate the subsequent data of the parent Element, from the Element that follows the CRC-32 element to the end of the parent Element.",,
CRC Not Pointlessly Used,MKV-CRC-REASON,0,Matroska Specification,Matroska,all,CRC Element,author,,Recommended,A CRC-32 element should not be the only child Element of its parent Element (ie hashing no data).,,
CRC-Presence,MKV-CRC-PRES,0,Matroska Specification,Matroska,all,CRC Element,,,"""All level 1 elements should include a CRC-32."" but CRC-32 Element is NOT Mandatory.  ?",Warning when Level 1 elements have no CRC-32. Very common.,,
>>>>>>> origin/master
