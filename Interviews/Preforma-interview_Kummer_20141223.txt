PreForma Interview: Highlights
Christopher Kummer
12/23/2014

Dave, Jerome, Tessa

D: why NOA recommends ffv1 for a few large scale 

C: We were one of the first companies asking for 96khz and 24-bit linear PCM. And that was regarded as crazy.  We were quite alone on the market, and now it's become standard. At that time, the BWF extension of the specification was in the hands of a few vendors; we could not just jump into the BWF extensions. In 2000, why don't we store that data in Access? We can use the chunks from the db to create BWF.  

In 2006-2009, we started to do very large migration projects with Swedish TV, we were trying to convince them to go with mjpeg2000. Then they decided to go for DC pro 50[?].  They did an analysis which showed that they didn't have the technology to include it in the production process.  At that time we were developing a lot towards video, but much less on the codec and container side, more on the file logistics and container side. That was the moment we thought we have a huge market in legacy archiving and legscy digitization.  IN 2010 we started to develop our product called FrameVector[?]. It is a two channel SD ingest machine which monitors our F signals from the heads which collects [10:11]all the interactive supports from the sony[?] machine and gives you an transfer tool specially for analog material where you can move the question of proactive [?] machines to a reactive scenario. This machine is recording to a lossless mezzanine format that we call "FFV half", a combination of Half/Hoff and ffv1.  Half goes up to 10 bits and has half the payload of [?]. So we have a mezzanine format which can be transferred to whatever broadcast archive format you need. 

Why do we use ffv1? The situation that we try to give our clients is that if you go for archives, please choose something you are able on access to transcode whatever format you want to have on access without a quality loss.  SO that was our starting point.

Peter Bubestinger suggested ffv1.  We found some deficiencies with ffv1 when using AVI. Our current implementation is based on ffv1 in an AVI container.  We decided against Matroska; the decision was a pure on access speed decision. AVI codec can be immediately fed to a transcoder without an additional file copy.  Example: As a user, I would like to have 20 segments of 20 different films, 20 segments of 2-3 minutes, within an acceptable time on my machine.  That is time for transfer from tape storage to cache to transcoding mechanismâ€¦so you have several copy mechanisms until you get to the file. And this must not exceed a certain time, or should be as low as possible, and that's why we ruled out jpeg2K. jpeg2K is sometimes 4 times slower than ffv1.3.  Speed in combination with accessibility of technology in combination with no license cost in combination with I can play it on every machine in combination with it is an open-format so whoever decides to use it does not have to invest in a technology so that in 10 years to be able to read the format but he can also read out the complete information without the hope of NOA.