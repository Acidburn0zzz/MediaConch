 <?xml version="1.0" encoding="UTF-8"?>
<registry>
  <rule icid="EBML-ELEM-START">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>The first Element ID must equal 0x172351395 (EBML Header)</definition>
    <note>Validity tbd per CELLAR.</note>
  </rule>
  <rule icid="EBML-VER-COH">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>EBMLReadVersion must be equal or less than the EBMLVersion.</definition>
    <reference_file>EBMLReadVersion_greaterthan_EBMLVersion.mkv</reference_file>
  </rule>
  <rule icid="EBML-DOCVER-COH">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>DocTypeReadVersion must be equal or less than the DocTypeVersion.</definition>
    <reference_file>docTypeReadVersion_greaterthan_docTypeVersion.mkv</reference_file>
  </rule>
  <rule icid="EBML-ELEMENT-VALID-PARENT">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Check that each EBML Element has a valid Parent Element.</definition>
    <reference_file>unknown_element.mkv</reference_file>
  </rule>
  <rule icid="EBML-ELEMENT-NONMULTIPLES">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Verify maxOccurs of EBML Elements</definition>
    <reference_file>too_many_copies_of_DocTypeVersion.mkv</reference_file>
  </rule>
  <rule icid="EBML-ELEMENT-CONTAINS-MANDATES">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Verify minOccurs of EBML Elements</definition>
    <reference_file>no_DocType.mkv</reference_file>
  </rule>
  <rule icid="EBML-VALID-MAXID">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>EBMLMaxIDLength must be in valid range.</definition>
    <reference_file>invalid_EBMLMaxIDLength.mkv</reference_file>
  </rule>
  <rule icid="EBML-VALID-MAXSIZE">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>EBMLMaxSizeLength must be in valid range.</definition>
    <reference_file>higher_EBMLMaxSizeLength_than_matroska_allows.mkv</reference_file>
  </rule>
  <rule icid="HEADER-ELEMENTS-WITHIN-MAXIDLENGTH">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Element ID (descending from Root Element) lengths must be less than or equal to 4.</definition>
    <reference_file>invalid_EBML_ElementDataSize_in_EBMLHeader.mkv</reference_file>
  </rule>
  <rule icid="ELEMENTS-WITHIN-MAXIDLENGTH">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Element ID (descending from Root Element) lengths must be less than or equal to EBMLMaxIDLength.</definition>
    <reference_file>lower_EBMLMaxSizeLength_than_elements_are_using.mkv</reference_file>
  </rule>
  <rule icid="HEADER-ELEMENTS-WITHIN-MAXSIZELENGTH">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Element Data Size (descending from Root Element) lengths must be less than or equal to 4.</definition>
    <reference_file>invalid_EBML_ElementDataSize_in_EBMLHeader.mkv</reference_file>
  </rule>
  <rule icid="ELEMENTS-WITHIN-MAXSIZELENGTH">
    <name></name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Element Data Size (descending from Root Element) lengths must be less than or equal to EBMLMaxSizeLength.</definition>
    <reference_file>really_invalid_EBML_ElementDataSize_in_EBMLHeader.mkv</reference_file>
  </rule>
  <rule icid="EBML-VINT-EFF">
    <name>EBML vint efficiency</name>
    <authority>EBML Specification</authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Structure</target_format_part>
    <citation></citation>
    <definition>Section 2.2 "IDs are always encoded in their shortest form, e.g. 1 is always encoded as 0x81 and never as 0x4001." The bits following the Element ID's Length Descriptor are not more than (8 - ${bit-length-of-length-descriptor}) successive 0 bits,  i.e. vint is expressed as efficiently as feasible.</definition>
    <reference_file>inefficient_elementid.mkv</reference_file>
    <note>to do</note>
  </rule>
  <rule icid="MKV-KNOWN-ELEM">
    <name>Element ID Registered</name>
    <authority></authority>
    <target_format>EBML</target_format>
    <target_format_part></target_format_part>
    <citation></citation>
    <definition>Ensure MKV Element ID is registered in specdata.xml (as of Dec. 13, 2014 this is 224 registered Element IDs)</definition>
    <reference_file>unknown_element.mkv</reference_file>
    <note>deprecated by EBML-ELEMENT-VALID-PARENT</note>
  </rule>
  <rule icid="EBML-ELEM-SIZE-7F">
    <name>Element Size 0x7F Reservation</name>
    <authority>EBML Specification</authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Element Size</target_format_part>
    <citation></citation>
    <definition>"Note that the shortest encoding form for 127 is 0x407f since 0x7f is reserved." If Element Size is set to 0x11111111 but element size is actually 127 bytes provide a warning.</definition>
    <note>This coincidence, waiting to resolve unknownsizeallowed attribute.</note>
  </rule>
  <rule icid="EBML-ELEM-SIZE-CAP">
    <name>Element Size Byte Length Limit</name>
    <authority>EBML Specification</authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Element Size</target_format_part>
    <citation></citation>
    <definition>Section 2.3: "The EBML element data size is encoded as a variable size integer with, by default, widths up to 8." The first eight bits of any Element Size may not start with 0b00000000.</definition>
    <note>deprecated by ELEMENTS-WITHIN-MAXSIZELENGTH</note>
  </rule>
  <rule icid="EBML-ELEM-SIZE-UNK">
    <name>Element Size Unknown</name>
    <authority>EBML Specification</authority>
    <target_format>EBML</target_format>
    <target_format_part>EBML Element Size</target_format_part>
    <citation></citation>
    <definition>only Master Elements may be unknown size</definition>
    <reference_file>unknown_sized_non_master_element.mkv</reference_file>
    <note>tbd, cellar, waiting on unknownsizeallowed attribute</note>
  </rule>
</registry>
